# [AI GENERATED] LLM: GitHub Copilot, Mode: Chat, Date: 2025-08-21
{{- range $serviceName, $service := .Values.services }}
{{- if $service.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "school-microservice.fullname" $ }}-{{ $serviceName }}
  namespace: {{ $.Values.namespace.name }}
  labels:
    {{- include "school-microservice.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $service.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "school-microservice.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "school-microservice.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "school-microservice.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $serviceName }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}/{{ $service.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $service.targetPort }}
              protocol: TCP
          env:
            {{- include "school-microservice.commonEnvVars" $ | nindent 12 }}
            {{- range $key, $value := $service.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if $.Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml $.Values.healthCheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.healthCheck.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
